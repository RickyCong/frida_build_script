name: CI

on: push

env:
  ANDROID_NDK_VERSION: r25b
  NODE_TARGETS_DEFAULT: '12.0.0 14.0.0 16.0.0 18.0.0 19.0.0'
  NODE_TARGETS_FREEBSD: '14.0.0 16.0.0 17.0.1'
  ELECTRON_TARGETS_DEFAULT: '21.0.0'
  ELECTRON_TARGETS_FREEBSD: '16.0.0'

jobs:
  publish-prod:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs:
      - package-linux
      - package-android
      - package-freebsd
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      - name: Install tools
        run: |
          sudo apt-get update
          sudo apt-get install -y reprepro
          sudo npm install -g cloudflare-cli
      - name: Download release assets
        uses: actions/download-artifact@v3
        with:
          name: release-assets
          path: build/release-assets/
      - name: Download Node.js and Electron prebuilds for Linux/x86
        uses: actions/download-artifact@v3
        with:
          name: frida-node-linux-x86
          path: build/release-assets/
      - name: Download Node.js and Electron prebuilds for Linux/x86_64
        uses: actions/download-artifact@v3
        with:
          name: frida-node-linux-x86_64
          path: build/release-assets/
      - name: Download Node.js and Electron prebuilds for Linux/arm64
        uses: actions/download-artifact@v3
        with:
          name: frida-node-linux-arm64
          path: build/release-assets/
      - name: Download Node.js and Electron prebuilds for FreeBSD/arm64
        uses: actions/download-artifact@v3
        with:
          name: frida-node-freebsd-arm64
          path: build/release-assets/
      - name: Package Cirrus CI artifacts
        run: releng/package-cirrus-ci-artifacts.sh ${{ github.sha }}
      - name: Rename release assets
        run: releng/rename-release-assets.sh
      - name: Publish release to GitHub
        uses: softprops/action-gh-release@v1
        with:
          name: "Frida ${{ env.FRIDA_VERSION }}"
          body: "See https://frida.re/news/ for details."
          files: build/release-assets/*
      - name: Publish Python bindings to PyPI
        uses: ./.github/actions/publish-python-bindings
        with:
          site: production
          pypi-token: ${{ secrets.PYPI_API_TOKEN }}
          testpypi-token: ${{ secrets.TEST_PYPI_API_TOKEN }}
      - name: Publish Node.js bindings to npm
        run: |
          cd frida-node
          npm version $FRIDA_VERSION
          mkdir prebuilds
          cp ../build/release-assets/frida-*-node-*-linux-x64.tar.gz prebuilds/
          npm install
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish frida-gadget-ios to npm
        run: |
          cd releng/modules/frida-gadget-ios
          npm version $FRIDA_VERSION
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Trigger magisk-frida CI
        run: |
          curl \
              -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.MAGISK_FRIDA_TOKEN }}" \
              https://api.github.com/repos/ViRb3/magisk-frida/dispatches \
              -d '{"event_type":"build"}'

  package-linux:
    if: startsWith(github.ref, 'refs/tags/')
    needs: frida-linux
    strategy:
      matrix:
        arch: [x86_64]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Package Gum devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gum-devkit-linux-${{ matrix.arch }}
      - name: Package GumJS devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gumjs-devkit-linux-${{ matrix.arch }}
      - name: Package Core devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-core-devkit-linux-${{ matrix.arch }}
      - name: Package frida-server
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-server-linux-${{ matrix.arch }}
      - name: Package frida-portal
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-portal-linux-${{ matrix.arch }}
      - name: Package frida-gadget
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-gadget-linux-${{ matrix.arch }}
      - name: Package frida-inject
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-inject-linux-${{ matrix.arch }}
      - name: Package QML bindings
        if: matrix.arch == 'x86_64'
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-qml-linux-${{ matrix.arch }}

  package-android:
    if: startsWith(github.ref, 'refs/tags/')
    needs: frida-android
    strategy:
      matrix:
        arch: [arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      # - name: Package Gum devkit
      #   uses: ./.github/actions/package-artifact-files-as-tarball
      #   with:
      #     name: frida-gum-devkit-android-${{ matrix.arch }}
      # - name: Package GumJS devkit
      #   uses: ./.github/actions/package-artifact-files-as-tarball
      #   with:
      #     name: frida-gumjs-devkit-android-${{ matrix.arch }}
      # - name: Package Core devkit
      #   uses: ./.github/actions/package-artifact-files-as-tarball
      #   with:
      #     name: frida-core-devkit-android-${{ matrix.arch }}
      - name: Package frida-server
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-server-android-${{ matrix.arch }}
      # - name: Package frida-portal
      #   uses: ./.github/actions/package-artifact-file
      #   with:
      #     name: frida-portal-android-${{ matrix.arch }}
      # - name: Package frida-gadget
      #   uses: ./.github/actions/package-artifact-file
      #   with:
      #     name: frida-gadget-android-${{ matrix.arch }}
      # - name: Package frida-inject
      #   uses: ./.github/actions/package-artifact-file
      #   with:
      #     name: frida-inject-android-${{ matrix.arch }}

  package-freebsd:
    if: startsWith(github.ref, 'refs/tags/')
    needs: frida-freebsd
    strategy:
      matrix:
        arch: [arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Package Gum devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gum-devkit-freebsd-${{ matrix.arch }}
      - name: Package GumJS devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-gumjs-devkit-freebsd-${{ matrix.arch }}
      - name: Package Core devkit
        uses: ./.github/actions/package-artifact-files-as-tarball
        with:
          name: frida-core-devkit-freebsd-${{ matrix.arch }}
      - name: Package frida-server
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-server-freebsd-${{ matrix.arch }}
      - name: Package frida-portal
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-portal-freebsd-${{ matrix.arch }}
      - name: Package frida-gadget
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-gadget-freebsd-${{ matrix.arch }}
      - name: Package frida-inject
        uses: ./.github/actions/package-artifact-file
        with:
          name: frida-inject-freebsd-${{ matrix.arch }}

  frida-linux:
    needs: sdk-linux
    strategy:
      matrix:
        arch: [x86_64]
      fail-fast: false
    runs-on: ubuntu-latest
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Install packages needed for installing Qt
        if: matrix.arch == 'x86_64'
        run: |
          apt-get update
          apt-get install -y sudo
      - name: Install Qt
        if: matrix.arch == 'x86_64'
        uses: jurplel/install-qt-action@v3
        with:
          cache: true
          setup-python: false
          dir: '${{ github.workspace }}/qt-example/'
      - name: Build Gum libraries and tools
        run: make build/frida_thin-linux-${{ matrix.arch }}/lib/pkgconfig/frida-gum-1.0.pc
      - name: Build Gum devkit
        run: releng/devkit.py -t frida-gum linux-${{ matrix.arch }} build/devkits/gum
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gum-devkit-linux-${{ matrix.arch }}
          path: build/devkits/gum/
      - name: Build GumJS devkit
        run: releng/devkit.py -t frida-gumjs linux-${{ matrix.arch }} build/devkits/gumjs
      - name: Upload GumJS devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gumjs-devkit-linux-${{ matrix.arch }}
          path: build/devkits/gumjs/
      - name: Build Core libraries and tools
        run: make build/frida_thin-linux-${{ matrix.arch }}/lib/pkgconfig/frida-core-1.0.pc
      - name: Build Core devkit
        run: releng/devkit.py -t frida-core linux-${{ matrix.arch }} build/devkits/core
      - name: Upload Core devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-core-devkit-linux-${{ matrix.arch }}
          path: build/devkits/core/
      - name: Upload frida-server
        uses: actions/upload-artifact@v3
        with:
          name: frida-server-linux-${{ matrix.arch }}
          path: build/frida-linux-${{ matrix.arch }}/bin/frida-server
      - name: Upload frida-portal
        uses: actions/upload-artifact@v3
        with:
          name: frida-portal-linux-${{ matrix.arch }}
          path: build/frida-linux-${{ matrix.arch }}/bin/frida-portal
      - name: Upload frida-inject
        uses: actions/upload-artifact@v3
        with:
          name: frida-inject-linux-${{ matrix.arch }}
          path: build/frida-linux-${{ matrix.arch }}/bin/frida-inject
      - name: Upload 32-bit frida-gadget
        if: ${{ !contains(matrix.arch, '64') }}
        uses: actions/upload-artifact@v3
        with:
          name: frida-gadget-linux-${{ matrix.arch }}
          path: build/frida-linux-${{ matrix.arch }}/lib/frida/32/frida-gadget.so
      - name: Upload 64-bit frida-gadget
        if: ${{ contains(matrix.arch, '64') }}
        uses: actions/upload-artifact@v3
        with:
          name: frida-gadget-linux-${{ matrix.arch }}
          path: build/frida-linux-${{ matrix.arch }}/lib/frida/64/frida-gadget.so
      - name: Build Python bindings
        run: |
          make build/tmp_thin-linux-${{ matrix.arch }}/frida-python3.10/.frida-stamp \
              PYTHON_NAME=python3.10 \
              PYTHON_INCDIR=/opt/x-tools/$XTOOLS_HOST/$XTOOLS_HOST/sysroot/usr/include/python3.10
          export FRIDA_EXTENSION=$PWD/build/frida_thin-linux-${{ matrix.arch }}/lib/python3.10/site-packages/_frida.so
          frida_arch=$(echo "${{ matrix.arch }}" | cut -f1 -d"-")
          case $frida_arch in
            x86)
              py_arch=i686
              ;;
            armhf)
              py_arch=armv7l
              ;;
            arm64)
              py_arch=aarch64
              ;;
            *)
              py_arch=$frida_arch
              ;;
          esac
          case ${{ matrix.arch }} in
            *-musl)
              py_platform=musllinux_1_1_${py_arch}
              ;;
            x86*)
              py_platform=manylinux_2_5_${py_arch}.manylinux1_${py_arch}
              ;;
            arm*|ppc*|s390x)
              py_platform=manylinux_2_17_${py_arch}.manylinux2014_${py_arch}
              ;;
            *)
              py_platform=manylinux_2_5_${py_arch}
              ;;
          esac
          bdist_wheel_py=/usr/lib/python3/dist-packages/wheel/bdist_wheel.py
          sed "s/plat_name = plat_name\\.lower()\\.replace('-', '_')\\.replace('.', '_')/plat_name = plat_name.lower().replace('-', '_')/" \
              $bdist_wheel_py > $bdist_wheel_py.patched
          if cmp -s $bdist_wheel_py $bdist_wheel_py.patched; then
            rm -f $bdist_wheel_py.patched
            echo 'Unable to patch bdist_wheel.py' > /dev/stderr
            exit 1
          else
            mv $bdist_wheel_py.patched $bdist_wheel_py
          fi
          cd frida-python
          export _PYTHON_HOST_PLATFORM=linux-$py_arch
          echo "plat_name = $py_platform" >> setup.cfg
          pip wheel -w ../build/wheels --no-deps .
      - name: Upload Python bindings
        uses: actions/upload-artifact@v3
        with:
          name: frida-python-linux-${{ matrix.arch }}
          path: build/wheels/frida-*.whl
      - name: Publish Python bindings to PyPI
        uses: ./.github/actions/publish-python-bindings
        with:
          site: production

      # - name: Build Node.js bindings
      #   if: ${{ !(startsWith(matrix.arch, 'mips') || endsWith(matrix.arch, '-musl')) }}
      #   run: |
      #     frida_arch=$(echo "${{ matrix.arch }}" | cut -f1 -d"-")
      #     case $frida_arch in
      #       x86)
      #         gyp_arch=ia32
      #         ;;
      #       x86_64)
      #         gyp_arch=x64
      #         ;;
      #       armhf)
      #         gyp_arch=arm
      #         ;;
      #       *)
      #         gyp_arch=$frida_arch
      #         ;;
      #     esac
      #     export npm_config_arch=$gyp_arch
      #     export npm_config_jobs=max
      #     export prebuild_arch=$gyp_arch
      #     cd frida-node
      #     npm version $FRIDA_VERSION
      #     npm install
      #     for target in ${{ env.NODE_TARGETS_DEFAULT }}; do
      #       npm run prebuild -- -r node -t $target
      #     done
      #     for target in ${{ env.ELECTRON_TARGETS_DEFAULT }}; do
      #       npm run prebuild -- -r electron -t $target
      #     done
      # - name: Upload Node.js bindings
      #   if: ${{ !(startsWith(matrix.arch, 'mips') || endsWith(matrix.arch, '-musl')) }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-node-linux-${{ matrix.arch }}
      #     path: frida-node/prebuilds/*
      - name: Build QML bindings
        if: matrix.arch == 'x86_64'
        run: |
          cd build/tmp_thin-linux-${{ matrix.arch }}
          mkdir frida-qml
          cd frida-qml
          qmake QMAKE_TARGET.arch=${{ matrix.arch }} ../../../frida-qml
          make -j$(nproc) install
      - name: Upload QML bindings
        if: matrix.arch == 'x86_64'
        uses: actions/upload-artifact@v3
        with:
          name: frida-qml-linux-${{ matrix.arch }}
          path: build/frida-linux-${{ matrix.arch }}/lib/qt5/qml/

  frida-android:
    needs: [sdk-linux, sdk-android-64]
    strategy:
      matrix:
        arch: [arm64]
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Set up NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.ANDROID_NDK_VERSION }}
          add-to-path: false
      - name: Add ANDROID_NDK_ROOT to environment
        run: echo "ANDROID_NDK_ROOT=${{ steps.setup-ndk.outputs.ndk-path }}" >> $GITHUB_ENV
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      # - name: Build Gum libraries and tools
      #   run: make build/frida-android-${{ matrix.arch }}/lib/pkgconfig/frida-gum-1.0.pc
      # - name: Build Gum devkit
      #   run: releng/devkit.py frida-gum android-${{ matrix.arch }} build/devkits/gum
      # - name: Upload Gum devkit
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-gum-devkit-android-${{ matrix.arch }}
      #     path: build/devkits/gum/
      # - name: Build GumJS devkit
      #   run: releng/devkit.py frida-gumjs android-${{ matrix.arch }} build/devkits/gumjs
      # - name: Upload GumJS devkit
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-gumjs-devkit-android-${{ matrix.arch }}
      #     path: build/devkits/gumjs/
      - name: Build Core libraries and tools
        run: make build/frida-android-${{ matrix.arch }}/lib/pkgconfig/frida-core-1.0.pc
      # - name: Build Core devkit
      #   run: releng/devkit.py frida-core android-${{ matrix.arch }} build/devkits/core
      # - name: Upload Core devkit
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-core-devkit-android-${{ matrix.arch }}
      #     path: build/devkits/core/
      - name: Upload frida-server
        uses: actions/upload-artifact@v3
        with:
          name: frida-server-android-${{ matrix.arch }}
          path: build/frida-android-${{ matrix.arch }}/bin/frida-server
      # - name: Upload frida-portal
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-portal-android-${{ matrix.arch }}
      #     path: build/frida-android-${{ matrix.arch }}/bin/frida-portal
      # - name: Upload frida-inject
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-inject-android-${{ matrix.arch }}
      #     path: build/frida-android-${{ matrix.arch }}/bin/frida-inject
      # - name: Upload 32-bit frida-gadget
      #   if: ${{ !contains(matrix.arch, '64') }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-gadget-android-${{ matrix.arch }}
      #     path: build/frida-android-${{ matrix.arch }}/lib/frida/32/frida-gadget.so
      # - name: Upload 64-bit frida-gadget
      #   if: ${{ contains(matrix.arch, '64') }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: frida-gadget-android-${{ matrix.arch }}
      #     path: build/frida-android-${{ matrix.arch }}/lib/frida/64/frida-gadget.so


  frida-freebsd:
    runs-on: [freebsd, arm64]
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Roll toolchain
        run: releng/deps.py roll toolchain freebsd-arm64 --activate
      - name: Roll SDK
        run: releng/deps.py roll sdk freebsd-arm64
      - name: Build Gum libraries and tools
        run: make gum
      - name: Build Gum devkit
        run: releng/devkit.py frida-gum freebsd-arm64 build/devkits/gum
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gum-devkit-freebsd-arm64
          path: build/devkits/gum/
      - name: Build GumJS devkit
        run: releng/devkit.py frida-gumjs freebsd-arm64 build/devkits/gumjs
      - name: Upload GumJS devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gumjs-devkit-freebsd-arm64
          path: build/devkits/gumjs/
      - name: Test Gum
        run: make check-gum
      - name: Build Core libraries and tools
        run: make core
      - name: Build Core devkit
        run: releng/devkit.py frida-core freebsd-arm64 build/devkits/core
      - name: Upload Core devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-core-devkit-freebsd-arm64
          path: build/devkits/core/
      - name: Upload frida-server
        uses: actions/upload-artifact@v3
        with:
          name: frida-server-freebsd-arm64
          path: build/frida-freebsd-arm64/bin/frida-server
      - name: Upload frida-portal
        uses: actions/upload-artifact@v3
        with:
          name: frida-portal-freebsd-arm64
          path: build/frida-freebsd-arm64/bin/frida-portal
      - name: Upload frida-inject
        uses: actions/upload-artifact@v3
        with:
          name: frida-inject-freebsd-arm64
          path: build/frida-freebsd-arm64/bin/frida-inject
      - name: Upload frida-gadget
        uses: actions/upload-artifact@v3
        with:
          name: frida-gadget-freebsd-arm64
          path: build/frida-freebsd-arm64/lib/frida/64/frida-gadget.so
      - name: Test Core
        run: make check-core
      - name: Build Python bindings
        run: |
          make python
          export FRIDA_EXTENSION=$PWD/build/frida-freebsd-arm64/lib/python3.9/site-packages/_frida.so
          cd frida-python
          pip wheel -w ../build/wheels --no-deps .
      - name: Upload Python bindings
        uses: actions/upload-artifact@v3
        with:
          name: frida-python-freebsd-arm64
          path: build/wheels/frida-*.whl
      - name: Build Node.js bindings
        run: |
          export npm_config_jobs=max
          cd frida-node
          npm version $FRIDA_VERSION
          npm install
          for target in ${{ env.NODE_TARGETS_FREEBSD }}; do
            npm run prebuild -- -r node -t $target
          done
          for target in ${{ env.ELECTRON_TARGETS_FREEBSD }}; do
            npm run prebuild -- -r electron -t $target
          done
      - name: Upload Node.js bindings
        uses: actions/upload-artifact@v3
        with:
          name: frida-node-freebsd-arm64
          path: frida-node/prebuilds/*

  frida-qnx:
    runs-on: ubuntu-latest
    needs: sdk-linux
    container: ghcr.io/frida/qnx-tools:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Roll SDK
        run: releng/deps.py roll sdk qnx-armeabi
      - name: Build Gum libraries and tools
        run: make gum-qnx-armeabi
      - name: Build Gum devkit
        run: releng/devkit.py -t frida-gum qnx-armeabi build/devkits/gum
      - name: Upload Gum devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gum-devkit-qnx-armeabi
          path: build/devkits/gum/
      - name: Build GumJS devkit
        run: releng/devkit.py -t frida-gumjs qnx-armeabi build/devkits/gumjs
      - name: Upload GumJS devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-gumjs-devkit-qnx-armeabi
          path: build/devkits/gumjs/
      - name: Test Gum
        run: |
          tar -C build/tmp_thin-qnx-armeabi/frida-gum/tests -cf /tmp/runner.tar gum-tests data/
          /opt/sabrelite/run.sh /tmp/runner.tar /opt/frida/gum-tests
      - name: Build Core libraries and tools
        run: make core-qnx-armeabi
      - name: Build Core devkit
        run: releng/devkit.py -t frida-core qnx-armeabi build/devkits/core
      - name: Upload Core devkit
        uses: actions/upload-artifact@v3
        with:
          name: frida-core-devkit-qnx-armeabi
          path: build/devkits/core/
      - name: Upload frida-server
        uses: actions/upload-artifact@v3
        with:
          name: frida-server-qnx-armeabi
          path: build/frida_thin-qnx-armeabi/bin/frida-server
      - name: Upload frida-portal
        uses: actions/upload-artifact@v3
        with:
          name: frida-portal-qnx-armeabi
          path: build/frida_thin-qnx-armeabi/bin/frida-portal
      - name: Upload frida-inject
        uses: actions/upload-artifact@v3
        with:
          name: frida-inject-qnx-armeabi
          path: build/frida_thin-qnx-armeabi/bin/frida-inject
      - name: Upload frida-gadget
        uses: actions/upload-artifact@v3
        with:
          name: frida-gadget-qnx-armeabi
          path: build/frida_thin-qnx-armeabi/lib/frida/32/frida-gadget.so
      - name: Test Core
        run: |
          mkdir -p /tmp/pkg
          cd build/tmp_thin-qnx-armeabi/frida-core
          cp -a tests/frida-tests tests/labrats/ lib/agent/frida-agent.so /tmp/pkg
          tar -C /tmp/pkg -cf /tmp/runner.tar .
          /opt/sabrelite/run.sh /tmp/runner.tar /opt/frida/frida-tests
        continue-on-error: true

  toolchain-linux:
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    runs-on: ubuntu-latest
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Roll toolchain
        run: releng/deps.py roll toolchain linux-${{ matrix.arch }}

  sdk-linux:
    needs: toolchain-linux
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    runs-on: ubuntu-latest
    container: ghcr.io/frida/x-tools-linux-${{ matrix.arch }}:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set FRIDA_CAN_RUN_HOST_BINARIES
        if: ${{ matrix.arch == 'x86' }}
        run: echo "FRIDA_CAN_RUN_HOST_BINARIES=yes" >> $GITHUB_ENV
      - name: Configure qemu-user
        if: ${{ !startsWith(matrix.arch, 'x86') }}
        run: echo "FRIDA_QEMU_SYSROOT=/opt/x-tools/$XTOOLS_HOST/$XTOOLS_HOST/sysroot" >> $GITHUB_ENV
      - name: Roll SDK
        run: releng/deps.py roll sdk linux-${{ matrix.arch }} --activate

  sdk-android-64:
    needs: toolchain-linux
    strategy:
      matrix:
        arch: [x86_64, arm64]
      fail-fast: false
    runs-on: ubuntu-latest
    container: ghcr.io/frida/x-tools-linux-x86_64:latest
    steps:
      - name: Check out repo
        uses: actions/checkout@v3
      - name: Set up NDK
        id: setup-ndk
        uses: nttld/setup-ndk@v1
        with:
          ndk-version: ${{ env.ANDROID_NDK_VERSION }}
          add-to-path: false
      - name: Roll SDK
        run: |
          export \
              CC_FOR_BUILD=$CC \
              CXX_FOR_BUILD=$CXX \
              AS_FOR_BUILD=$AS \
              LD_FOR_BUILD=$LD \
              AR_FOR_BUILD=$AR \
              NM_FOR_BUILD=$NM \
              RANLIB_FOR_BUILD=$RANLIB \
              STRIP_FOR_BUILD=$STRIP \
              READELF_FOR_BUILD=$READELF \
              OBJCOPY_FOR_BUILD=$OBJCOPY \
              OBJDUMP_FOR_BUILD=$OBJDUMP
          unset CC CXX AS LD AR NM RANLIB STRIP READELF OBJCOPY OBJDUMP
          releng/deps.py roll sdk android-${{ matrix.arch }} --activate
        env:
          ANDROID_NDK_ROOT: ${{ steps.setup-ndk.outputs.ndk-path }}
